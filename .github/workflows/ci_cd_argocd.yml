# name: GitOps CI/CD Workflow (with Argo CD)

# on:
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]

# jobs:
#   build:

#     runs-on: ubuntu-latest
#     defaults:
#       run:
#         working-directory: ./mern

#     steps:
#     - name: Checkout repository
#       uses: actions/checkout@v3

#     - name: Use Node.js
#       uses: actions/setup-node@v4
#       with:
#         node-version: '20.x'
        
#     - name: Install dependencies
#       run: |
#         cd server
#         npm install

#     - name: Test backend
#       run: |
#         cd server
#         npm test

#     - name: Set up QEMU
#       uses: docker/setup-qemu-action@v3
      
#     - name: Set up Docker Buildx
#       id: buildx
#       uses: docker/setup-buildx-action@v2
      
#     - name: Cache Docker layers
#       uses: actions/cache@v3
#       with:
#         path: /tmp/.buildx-cache
#         key: ${{ runner.os }}-buildx-${{ github.sha }}
#         restore-keys: |
#           ${{ runner.os }}-buildx-
    
#     - uses: docker/login-action@v2 
#       with:
#         username: ${{ secrets.DOCKER_USERNAME }}
#         password: ${{ secrets.DOCKER_PASSWORD }}

#     - name: Build and push backend container
#       uses: docker/build-push-action@v5
#       with:
#         context: ./mern/server 
#         file: ./mern/server/Dockerfile
#         builder: ${{ steps.buildx.outputs.name }}
#         push: true
#         tags: ${{ secrets.DOCKER_USERNAME }}/backend-hw3:${{ github.sha }}, ${{ secrets.DOCKER_USERNAME }}/backend-hw3:latest
#         platforms: linux/amd64,linux/arm64
#         cache-from: type=local,src=/tmp/.buildx-cache
#         cache-to: type=local,dest=/tmp/.buildx-cache

#     - name: Build and push frontend container
#       uses: docker/build-push-action@v5
#       with:
#         context: ./mern/client 
#         file: ./mern/client/Dockerfile
#         builder: ${{ steps.buildx.outputs.name }}
#         push: true
#         tags: ${{ secrets.DOCKER_USERNAME }}/frontend-hw3:${{ github.sha }}, ${{ secrets.DOCKER_USERNAME }}/frontend-hw3:latest
#         platforms: linux/amd64,linux/arm64
#         cache-from: type=local,src=/tmp/.buildx-cache
#         cache-to: type=local,dest=/tmp/.buildx-cache

#   deploy:
    
#     name: Deploy
#     runs-on: ubuntu-latest
#     needs: build

#     steps:
#     - name: Check out code
#       uses: actions/checkout@v2

#     - name: Setup Kustomize
#       uses: imranismail/setup-kustomize@v1
#       with:
#         kustomize-version: "3.6.1"

#     - name: Update Kubernetes resources
#       env:
#         DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
#       run: |
#        cd k8s
#        kustomize edit set namespace hello-gitops
#        kustomize edit set image hello-gitops=$DOCKER_USERNAME/hello-gitops:$GITHUB_SHA
#        cat kustomization.yaml
        
#     - name: Commit files
#       run: |
#         git config --local user.email "action@github.com"
#         git config --local user.name "GitHub Action"
#         git commit -am "Bump docker tag"

#     - name: Push changes
#       uses: ad-m/github-push-action@master
#       with:
#         github_token: ${{ secrets.GITHUB_TOKEN }}
