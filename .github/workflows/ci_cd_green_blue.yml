name: CI/CD Workflow (deploy to GKE)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./mern

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        
    - name: Install dependencies
      run: |
        cd server
        npm install

    - name: Test backend
      run: |
        cd server
        npm test

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
    
    - uses: docker/login-action@v2 
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push backend container
      uses: docker/build-push-action@v5
      with:
        context: ./mern/server 
        file: ./mern/server/Dockerfile
        builder: ${{ steps.buildx.outputs.name }}
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/backend-hw3:${{ github.sha }}, ${{ secrets.DOCKER_USERNAME }}/backend-hw3:latest
        platforms: linux/amd64,linux/arm64
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache

    - name: Build and push frontend container
      uses: docker/build-push-action@v5
      with:
        context: ./mern/client 
        file: ./mern/client/Dockerfile
        builder: ${{ steps.buildx.outputs.name }}
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/frontend-hw3:${{ github.sha }}, ${{ secrets.DOCKER_USERNAME }}/frontend-hw3:latest
        platforms: linux/amd64,linux/arm64
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache

  deploy: 
    name: Deploy
    runs-on: ubuntu-latest
    needs: build
    
    env:
      PROJECT_ID: ${{ secrets.GKE_PROJECT }}
      GKE_CLUSTER: autopilot-cluster-1
      GKE_REGION: us-central1	

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Setup Kustomize
      uses: imranismail/setup-kustomize@v1
      with:
        kustomize-version: "3.6.1"

    - name: Authenticate to Google Cloud
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

    - name: Set up Cloud SDK
      uses: 'google-github-actions/setup-gcloud@v2'
      with:
        install_components: "gke-gcloud-auth-plugin"

    - name: Get the GKE credentials so we can deploy to the cluster
      run: |
        gcloud container clusters get-credentials "$GKE_CLUSTER" --region "$GKE_REGION"

    - name: Create namespace & set in Kustomize
      run: |
         namespacePresentBlue=`kubectl get ns | grep mern-blue | wc -l`
         namespacePresentGreen=`kubectl get ns | grep mern-green | wc -l`
         if [ $namespacePresentBlue -eq 0 ]
         then
            kubectl create ns mern-blue
            kubectl create secret generic mern-secret \
              --from-literal MONGODB_USER=${{ secrets.MONGODB_USER}} \
              --from-literal MONGODB_PASSWORD=${{ secrets.MONGODB_PASSWORD}} \
              --from-literal CLOUDINARY_CLOUD_NAME=${{ secrets.CLOUDINARY_CLOUD_NAME }} \
              --from-literal CLOUDINARY_API_KEY=${{ secrets.CLOUDINARY_API_KEY }} \
              --from-literal CLOUDINARY_API_SECRET=${{ secrets.CLOUDINARY_API_SECRET }} \
              -n mern-blue
            cd kubernetes
            kustomize edit set namespace mern-blue
            echo "NEW_NAMESPACE=mern-blue" >> $GITHUB_ENV
            echo "OLD_NAMESPACE=mern-green" >> $GITHUB_ENV
         elif [ $namespacePresentGreen -eq 0 ]
         then
            kubectl create ns mern-green
            kubectl create secret generic mern-secret \
              --from-literal MONGODB_USER=${{ secrets.MONGODB_USER}} \
              --from-literal MONGODB_PASSWORD=${{ secrets.MONGODB_PASSWORD}} \
              --from-literal CLOUDINARY_CLOUD_NAME=${{ secrets.CLOUDINARY_CLOUD_NAME }} \
              --from-literal CLOUDINARY_API_KEY=${{ secrets.CLOUDINARY_API_KEY }} \
              --from-literal CLOUDINARY_API_SECRET=${{ secrets.CLOUDINARY_API_SECRET }} \
              -n mern-green
            cd kubernetes
            kustomize edit set namespace mern-green
            echo "NEW_NAMESPACE=mern-green" >> $GITHUB_ENV
            echo "OLD_NAMESPACE=mern-blue" >> $GITHUB_ENV
         else
            echo "Both Blue and Green namespaces are present! Exiting"
            exit 1
         fi

    - name: Update Kubernetes resources
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      run: |
       cd kubernetes
       kustomize edit set image frontend-hw3=$DOCKER_USERNAME/frontend-hw3:$GITHUB_SHA
       kustomize edit set image backend-hw3=$DOCKER_USERNAME/backend-hw3:$GITHUB_SHA
       cat kustomization.yaml
    
    - name: Deploy updated Kubernetes resources
      run: |
        kubectl apply -k kubernetes/ 
   
    - name: Remove old namespace
      run: |
        namespacePresentOld=`kubectl get ns | grep ${{ env.OLD_NAMESPACE }} | wc -l`
        if [ $namespacePresentOld -eq 1 ]
        then
          kubectl delete ns ${{ env.OLD_NAMESPACE }} --wait=true
        fi
 
    - name: Commit files
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git commit -am "Bump docker tag"
        
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }} 
